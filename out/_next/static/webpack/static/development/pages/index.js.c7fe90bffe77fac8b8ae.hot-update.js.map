{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c7fe90bffe77fac8b8ae.hot-update.js","sources":["webpack:///./components/Layout.tsx","webpack:///./components/styles/GlobalStyles.tsx"],"sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport Head from 'next/head';\nimport { withTheme } from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport BackToTopButton from './BackToTopButton';\nimport { debounce } from '../lib/utils';\n\ntype P = {\n  title: string;\n  onSearchSubmit: Function;\n  onAddNewFavourite: Function;\n  toggleTheme: Function;\n  themeName: string;\n  children: React.ReactNode;\n  isAuthenticated: any;\n  onLogoutClick: Function;\n};\n\nconst Layout = (props: P) => {\n  const {\n    children,\n    title = 'redditDev',\n    onSearchSubmit,\n    onAddNewFavourite,\n    toggleTheme,\n    themeName,\n    isAuthenticated,\n    onLogoutClick\n  } = props;\n\n  const [showBackToTopBtn, setShowBackToTopBtn] = useState(false);\n\n  const onScroll = () => {\n    if (window.scrollY > 500 && !showBackToTopBtn) {\n      return setShowBackToTopBtn(true);\n    }\n    return setShowBackToTopBtn(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', debounce(onScroll));\n\n    return () => {\n      window.removeEventListener('scroll', debounce(onScroll));\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <GlobalStyles {...props} />\n      <Head>\n        <title>{title}</title>\n      </Head>\n      <Header\n        onSearchSubmit={onSearchSubmit}\n        onAddNewFavourite={onAddNewFavourite}\n        toggle={toggleTheme}\n        themeName={themeName}\n        isAuthenticated={isAuthenticated}\n        onLogoutClick={onLogoutClick}\n      />\n      <Sidebar />\n      {children}\n      <BackToTopButton show={showBackToTopBtn} />\n    </Fragment>\n  );\n};\n\nexport default withTheme(Layout);\n","import { createGlobalStyle } from 'styled-components';\r\nimport { constants } from './constants';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\nhtml {\r\n    background: ${props => props.theme.main_background};\r\n    color: ${props => props.theme.font_colour_primary};\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    font-family: ${constants.sansSerif};\r\n    /* opacity: 0; */\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n#__next {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n\r\na:link {\r\n\ttext-decoration: none;\r\n\tcolor: inherit;\r\n}\r\n\r\na:visited {\r\n\tcolor: inherit;\r\n}\r\n\r\nbutton {\r\n\tbackground: transparent;\r\n\tborder: 0;\r\n}\r\n\r\nsvg {\r\n  fill: ${props => props.theme.button_colour};\r\n}\r\n\r\n.page-transition-enter {\r\n            opacity: 0;\r\n          }\r\n          .page-transition-enter-active {\r\n            opacity: 1;\r\n            transition: opacity 200ms;\r\n          }\r\n          .page-transition-exit {\r\n            opacity: 1;\r\n          }\r\n          .page-transition-exit-active {\r\n            opacity: 0;\r\n            transition: opacity 200ms;\r\n          }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AA2CA;AAAA;AAmBA;;;;A","sourceRoot":""}