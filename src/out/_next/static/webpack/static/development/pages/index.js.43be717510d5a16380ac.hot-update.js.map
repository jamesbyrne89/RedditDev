{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.43be717510d5a16380ac.hot-update.js","sources":["webpack:///./components/Search.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { debounce, mapSubsToColours } from '../lib/utils';\r\nimport SearchStyles, { SearchDropdownStyles } from './styles/SearchStyles';\r\nimport { SubRedditNameStyles } from './styles/CardStyles';\r\n\r\ninterface IProps { onSearchSubmit: Function }\r\n\r\ninterface State { input: string }\r\n\r\nconst subreddits = [\r\n  'webdev',\r\n  'web_design',\r\n  'frontend',\r\n  'css',\r\n  'javascript',\r\n  'reactjs',\r\n  'graphql',\r\n  'node',\r\n  'typescript',\r\n  'vue',\r\n];\r\n\r\nconst Search = () => {\r\n  const [ input, setInput ] = useState('');\r\n  const [ isFocused, setFocus ] = useState(false);\r\n  const [ allSubreddits, setRemainingSubreddits ] = useState(subreddits);\r\n  const [ selected, setSelected ] = useState([]);\r\n\r\n  const onUserEntry = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    onSearchSubmit(input);\r\n  };\r\n\r\n  const handleKeyup = debounce(\r\n    (e: React.FormEvent<HTMLInputElement>): void => onSubmit(e),\r\n    500,\r\n  );\r\n\r\n  const handleFocus = () => {\r\n    setFocus(true);\r\n  };\r\n\r\n  const handleBlur = () => {};\r\n\r\n  const selectSubreddit = subName => {\r\n    console.log(subName);\r\n    const newSelected = [ ...selected, subName ];\r\n    setSelected(newSelected);\r\n    setRemainingSubreddits(allSubreddits.filter(sub => sub !== subName));\r\n  };\r\n\r\n  return (\r\n    <SearchStyles onSubmit={onSubmit}>\r\n      <input\r\n        className=\"search__input\"\r\n        type=\"search\"\r\n        placeholder=\"Search posts\"\r\n        value={input}\r\n        onChange={onUserEntry}\r\n        onKeyUp={handleKeyup}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n      />\r\n      <svg\r\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 100 125\"\r\n        enableBackground=\"new 0 0 100 100\"\r\n        xmlSpace=\"preserve\"\r\n        className=\"search__icon\"\r\n      >\r\n        <path\r\n          fill=\"#000\"\r\n          d=\"M78.129 78.325L65.121 61.063c8.65-8.773 9.834-22.812 2.203-32.938-4.822-6.396-12.186-10.064-20.203-10.064-5.52 0-10.775 1.762-15.195 5.092-11.131 8.393-13.361 24.271-4.975 35.396 4.822 6.396 12.186 10.066 20.205 10.066 4.74 0 9.25-1.373 13.242-3.848l12.938 17.17 4.793-3.612zM31.742 54.938c-6.395-8.484-4.693-20.594 3.793-26.992a19.114 19.114 0 0 1 11.586-3.885c6.117 0 11.734 2.799 15.41 7.676 6.398 8.49 4.697 20.6-3.793 26.996a19.092 19.092 0 0 1-11.582 3.883c-6.117 0-11.736-2.797-15.414-7.678z\"\r\n        />\r\n      </svg>\r\n      <button type=\"button\" id=\"search-close-btn\" className=\"search__close-btn\">\r\n      </button>\r\n      {isFocused && (\r\n            <SearchDropdownStyles>\r\n              <ul>\r\n                {selected.map(\r\n                    (subName, idx) => (\r\n                      <li>\r\n                        <SubRedditNameStyles\r\n                          key={idx}\r\n                          colour={mapSubsToColours(subName)}\r\n                        >\r\n                          {subName}\r\n                        </SubRedditNameStyles>\r\n                      </li>\r\n                    ),\r\n                  )}\r\n              </ul>\r\n              <ul>\r\n                {subreddits.map(\r\n                    (subName, idx) => (\r\n                      <li>\r\n                        <SubRedditNameStyles\r\n                          key={idx}\r\n                          colour={mapSubsToColours(subName)}\r\n                          onClick={() => selectSubreddit(subName)}\r\n                        >\r\n                          {subName}\r\n                        </SubRedditNameStyles>\r\n                      </li>\r\n                    ),\r\n                  )}\r\n              </ul>\r\n            </SearchDropdownStyles>\r\n          )}\r\n    </SearchStyles>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAMA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAiBA;AACA;AACA;;;;A","sourceRoot":""}