{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.141fe94025806aa312dd.hot-update.js","sources":["webpack:///./components/Home.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { constants, sizes } from './styles/constants';\r\n\r\nimport Card from './Card';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\nimport Sidebar from './Sidebar';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { isAlreadyFavourite } from '../lib/utils';\r\n\r\nconst CardsContainer = styled.main`\r\n    -webkit-column-count: 4;\r\n    column-count: 4;\r\n    -webkit-column-gap: 2.5em;\r\n    column-gap: 2.5em;\r\n    border-top: solid 1px ${constants.text_grey_mid_two};\r\n    padding-top: 1.25em;\r\n    padding-bottom: 1em;\r\n    width: 85%;\r\n    margin: 2rem auto;\r\n    margin-left: calc(7.5% + 2rem);\r\n    @media (max-width: ${sizes.desktop_lg}px) {\r\n      column-gap: 1.5rem;\r\n    }\r\n@media (max-width: ${sizes.desktop_md}px) {\r\n      column-count: 3;\r\n    }\r\n    @media (max-width: ${sizes.desktop_sm}px) {\r\n      column-count: 2;\r\n    }\r\n    @media (max-width: ${sizes.tablet}px) {\r\n      column-gap: 1rem;\r\n      width: 90%;\r\n      margin-left: calc(5% + 2rem);\r\n    }\r\n    @media (max-width: ${sizes.mobile}px) {\r\n      column-count: 1;\r\n      width: 95%;\r\n      margin-left: auto;\r\n    }\r\n    &::after {\r\n        content: '';\r\n        width: 100%;\r\n        position: fixed;\r\n        height: 40px;\r\n        background: -webkit-gradient(linear, left top, left bottom, from(rgba(236, 238, 241, 0.001)), to(white));\r\n        background: linear-gradient(rgba(236, 238, 241, 0.001), white);\r\n        pointer-events: none;\r\n        bottom: 0;\r\n        left: 0;\r\n    }\r\n\r\n`;\r\n\r\nclass Home extends React.Component<IProps, IState> {\r\n  render() {\r\n    const {\r\n      loading,\r\n      posts,\r\n      favourites,\r\n      onSearchSubmit,\r\n      onAddNewFavourite,\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          onSearchSubmit={onSearchSubmit}\r\n          onAddNewFavourite={onAddNewFavourite}\r\n        />\r\n        <Sidebar />\r\n        <CardsContainer>\r\n          {loading ? <Loader /> : posts.map((post: object): any => {\r\n                console.log(\r\n                  favourites.filter(\r\n                    isAlreadyFavourite({\r\n                      data: {\r\n                        title: post.data.title,\r\n                        created_utc: post.data.created_utc,\r\n                      },\r\n                    }),\r\n                  )[0],\r\n                );\r\n                console.log(post.data.title);\r\n                console.log(\r\n                  post.data.title,\r\n                  favourites.filter(\r\n                    isAlreadyFavourite({\r\n                      data: {\r\n                        title: post.data.title,\r\n                        created_utc: post.data.created_utc,\r\n                      },\r\n                    }),\r\n                  )[0],\r\n                  favourites.filter(\r\n                    isAlreadyFavourite({\r\n                      data: {\r\n                        title: post.data.title,\r\n                        created_utc: post.data.created_utc,\r\n                      },\r\n                    }),\r\n                  )[0]\r\n                    ? favourites.filter(\r\n                      isAlreadyFavourite({\r\n                        data: {\r\n                          title: post.data.title,\r\n                          created_utc: post.data.created_utc,\r\n                        },\r\n                      }),\r\n                    )[0].doc_id\r\n                    : undefined,\r\n                );\r\n                console.log(\r\n                  favourites.filter(\r\n                    isAlreadyFavourite({\r\n                      data: {\r\n                        title: post.data.title,\r\n                        created_utc: post.data.created_utc,\r\n                      },\r\n                    }),\r\n                  )[0],\r\n                );\r\n                return (\r\n                  <Card\r\n                    key={post.data.id}\r\n                    id={post.data.id}\r\n                    doc_id={\r\n                      favourites.filter(\r\n                        isAlreadyFavourite({\r\n                          data: {\r\n                            title: post.data.title,\r\n                            created_utc: post.data.created_utc,\r\n                          },\r\n                        }),\r\n                      ).length >\r\n                        0\r\n                        ? favourites.map(\r\n                          isAlreadyFavourite({\r\n                            data: {\r\n                              title: post.data.title,\r\n                              created_utc: post.data.created_utc,\r\n                            },\r\n                          }),\r\n                        )[0].doc_id\r\n                        : undefined\r\n                    }\r\n                    subName={post.data.subreddit_name_prefixed}\r\n                    title={post.data.title}\r\n                    url={post.data.url}\r\n                    permalink={post.data.permalink}\r\n                    num_comments={post.data.num_comments}\r\n                    created_utc={post.data.created_utc}\r\n                    isFavourite={\r\n                      favourites.filter(\r\n                        isAlreadyFavourite({\r\n                          data: {\r\n                            title: post.data.title,\r\n                            created_utc: post.data.created_utc,\r\n                          },\r\n                        }),\r\n                      ).length >\r\n                        0\r\n                    }\r\n                    onAddToFavourites={this.props.onAddToFavourites}\r\n                  />\r\n                );\r\n              })}\r\n        </CardsContainer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AA2CA;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAFA;AADA;AAQA;AACA;AAIA;AACA;AACA;AAFA;AADA;AASA;AACA;AACA;AAFA;AADA;AASA;AACA;AACA;AAFA;AADA;AASA;AAGA;AACA;AACA;AAFA;AADA;AAQA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAFA;AADA;AAUA;AACA;AACA;AAFA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAFA;AADA;AASA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AAIA;;;;AAnHA;AACA;AAqHA;;;;A","sourceRoot":""}