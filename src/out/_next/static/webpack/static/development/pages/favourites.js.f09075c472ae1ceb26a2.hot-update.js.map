{"version":3,"file":"static/webpack/static\\development\\pages\\favourites.js.f09075c472ae1ceb26a2.hot-update.js","sources":["webpack:///./components/CardContainer.tsx"],"sourcesContent":["import React from 'react';\r\nimport { isAlreadyFavourite } from '../lib/utils';\r\nimport Card from './Card';\r\nimport Loader from './Loader';\r\nimport { CardContainerStyles } from './styles/CardContainerStyles';\r\nimport { IRedditPost } from '../interfaces/index';\r\n\r\ntype Props = {\r\n  posts: IRedditPost[],\r\n  favourites: [],\r\n  loading: boolean,\r\n  emptyState: React.FunctionComponent,\r\n  onAddToFavourites: Function,\r\n};\r\n\r\nconst CardContainer = (props: Props) => {\r\n  const { posts, favourites, loading, emptyState, onAddToFavourites } = props;\r\n\r\n  return (\r\n    <CardContainerStyles>\r\n      {\r\n        loading\r\n          ? <Loader />\r\n          : posts.length === 0 && emptyState\r\n            ? emptyState()\r\n            : posts.map((post: IRedditPost): any => {\r\n              const favouriteMatch: [] = favourites.filter(\r\n                isAlreadyFavourite({\r\n                  data: { title: post.data.title, id: post.data.id },\r\n                }),\r\n              );\r\n              const docId = favouriteMatch[0]\r\n                ? favouriteMatch[0].doc_id\r\n                : undefined;\r\n              const isInFavourites = !!(favouriteMatch.length > 0);\r\n              return (\r\n                <Card\r\n                  key={post.data.id}\r\n                  id={post.data.id}\r\n                  doc_id={docId}\r\n                  subName={post.data.subreddit_name_prefixed}\r\n                  title={post.data.title}\r\n                  url={post.data.url}\r\n                  permalink={post.data.permalink}\r\n                  num_comments={post.data.num_comments}\r\n                  created_utc={post.data.created_utc}\r\n                  isFavourite={isInFavourites}\r\n                  onAddToFavourites={onAddToFavourites}\r\n                />\r\n              );\r\n            })\r\n      }\r\n    </CardContainerStyles>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAIA;AACA;AACA;;;;A","sourceRoot":""}