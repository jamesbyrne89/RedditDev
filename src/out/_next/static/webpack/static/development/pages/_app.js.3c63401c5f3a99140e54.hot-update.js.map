{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.3c63401c5f3a99140e54.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import App, { Container } from 'next/app';\r\nimport axios from 'axios';\r\nimport { endpoints } from '../lib/subreddits';\r\nimport { filterPostsCallback, sortByNewest } from '../lib/utils';\r\nimport db from '../db/firestore';\r\nimport { IRedditPost, ILocalRedditPost } from '../interfaces/index';\r\n\r\ninterface Props { loading: boolean, posts: IRedditPost[], favourites: [] }\r\n\r\nclass MyApp extends App<Props> {\r\n  state = {\r\n    loading: true,\r\n    posts: [],\r\n    filteredPosts: [],\r\n    isFiltered: false,\r\n    favourites: [],\r\n  };\r\n  static async getInitialProps({ Component, ctx }: any) {\r\n    let pageProps = { favourites: [] };\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    const data = await axios.all(\r\n      Object.keys(endpoints).map(url => axios.get(endpoints[url])),\r\n    );\r\n    const cleaned: IRedditPost[] = data.reduce(\r\n      (acc: IRedditPost[], curr: any): IRedditPost[] => {\r\n        return [ ...curr.data.data.children, ...acc ];\r\n      },\r\n      [],\r\n    );\r\n    const postsSortedByNewest: IRedditPost[] = cleaned.sort(sortByNewest);\r\n\r\n    return { posts: postsSortedByNewest, ...pageProps };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { posts = [], favourites = [] } = this.props;\r\n    this.setState({ loading: false, posts, favourites });\r\n    db.collection('favourites').onSnapshot(querySnapshot => {\r\n      const favourites = querySnapshot.docs.map(\r\n        doc => ({ doc_id: doc.id, data: doc.data().data }),\r\n      );\r\n      if (favourites.length !== this.state.favourites.length) {\r\n        this.setState({ favourites });\r\n      }\r\n    });\r\n  }\r\n\r\n  filterPosts = (searchTerm = '', subreddits = []) => {\r\n    if (!searchTerm && subreddits.length === 0) {\r\n      return this.setState({\r\n        filteredPosts: this.props.posts,\r\n        isFiltered: false,\r\n      });\r\n    }\r\n    this.setState({ loading: true });\r\n    const filtered = this.props.posts.filter(\r\n      filterPostsCallback(searchTerm, subreddits),\r\n    );\r\n    this.setState({\r\n      filteredPosts: filtered,\r\n      loading: false,\r\n      isFiltered: true,\r\n    });\r\n  };\r\n\r\n  addToFavourites = (postToAdd: ILocalRedditPost): void => {\r\n    if (postToAdd.doc_id) {\r\n      return this.removeFromFavourites(postToAdd);\r\n    }\r\n    db\r\n      .collection('favourites')\r\n      .add(postToAdd)\r\n      .then(docRef => {\r\n        console.log('added', { ...postToAdd, doc_id: docRef.id });\r\n      })\r\n      .catch(function(error) {\r\n        console.error('Error adding document: ', error);\r\n      });\r\n  };\r\n\r\n  removeFromFavourites = (postToRemove: ILocalRedditPost): void => {\r\n    db.collection('favourites').doc(postToRemove.doc_id).delete();\r\n  };\r\n\r\n  render() {\r\n    const { posts, filteredPosts, isFiltered } = this.state;\r\n    const { Component, pageProps } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Component\r\n          posts={isFiltered ? filteredPosts : posts}\r\n          loading={this.state.loading}\r\n          onSearchSubmit={this.filterPosts}\r\n          onAddToFavourites={this.addToFavourites}\r\n          favourites={this.state.favourites}\r\n          {...pageProps}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyApp;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAsCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAhDA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;AArFA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;;AACA;AACA;AAAA;AACA;;AAFA;AAGA;AAEA;AACA;AAGA;;AAEA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAzBA;AACA;AA+FA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}